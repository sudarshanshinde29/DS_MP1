// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: grep.proto

package grep

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GrepOptions   []string               `protobuf:"bytes,1,rep,name=grepOptions,proto3" json:"grepOptions,omitempty"` // passed to grep as-is
	Mode          string                 `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`               // "lines" or "count"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_grep_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grep_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_grep_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetGrepOptions() []string {
	if x != nil {
		return x.GrepOptions
	}
	return nil
}

func (x *SearchRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`         // worker label
	FilePath      string                 `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"` // when mode=="lines"
	Log           string                 `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`           // when mode=="lines"
	Count         int64                  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`      // when mode=="count", sum across files on worker
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_grep_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grep_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_grep_proto_rawDescGZIP(), []int{1}
}

func (x *SearchResponse) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SearchResponse) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SearchResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *SearchResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_grep_proto protoreflect.FileDescriptor

const file_grep_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"grep.proto\x12\x04grep\"E\n" +
	"\rSearchRequest\x12 \n" +
	"\vgrepOptions\x18\x01 \x03(\tR\vgrepOptions\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\tR\x04mode\"h\n" +
	"\x0eSearchResponse\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x1a\n" +
	"\bfilePath\x18\x02 \x01(\tR\bfilePath\x12\x10\n" +
	"\x03log\x18\x03 \x01(\tR\x03log\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x03R\x05count2D\n" +
	"\vGrepService\x125\n" +
	"\x06Search\x12\x13.grep.SearchRequest\x1a\x14.grep.SearchResponse0\x01B\x16Z\x14MP1/protoBuilds;grepb\x06proto3"

var (
	file_grep_proto_rawDescOnce sync.Once
	file_grep_proto_rawDescData []byte
)

func file_grep_proto_rawDescGZIP() []byte {
	file_grep_proto_rawDescOnce.Do(func() {
		file_grep_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grep_proto_rawDesc), len(file_grep_proto_rawDesc)))
	})
	return file_grep_proto_rawDescData
}

var file_grep_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_grep_proto_goTypes = []any{
	(*SearchRequest)(nil),  // 0: grep.SearchRequest
	(*SearchResponse)(nil), // 1: grep.SearchResponse
}
var file_grep_proto_depIdxs = []int32{
	0, // 0: grep.GrepService.Search:input_type -> grep.SearchRequest
	1, // 1: grep.GrepService.Search:output_type -> grep.SearchResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_grep_proto_init() }
func file_grep_proto_init() {
	if File_grep_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grep_proto_rawDesc), len(file_grep_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grep_proto_goTypes,
		DependencyIndexes: file_grep_proto_depIdxs,
		MessageInfos:      file_grep_proto_msgTypes,
	}.Build()
	File_grep_proto = out.File
	file_grep_proto_goTypes = nil
	file_grep_proto_depIdxs = nil
}
